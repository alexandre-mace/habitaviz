{"version":3,"sources":["components/GroupedBar.js","utils/randomIntFromInterval.js","data.js","colors.js","adapter/domainToStackedChartJsAdapter.js","components/utilities/Period.js","components/diagrams/StackedBuildingsEnergyConsumption.js","adapter/domainToFloatingChartJsAdapter.js","components/diagrams/FloatingBuildingsEnergyConsumption.js","components/Dougnut.js","adapter/domainToDoughnutAdapter.js","components/diagrams/DoughnutBuildingsEnergyConsumption.js","App.js","reportWebVitals.js","index.js"],"names":["options","scales","y","suggestedMax","x","GroupedBar","data","randomIntFromInterval","min","max","Math","floor","random","colors","domainToStackedChartJsAdapter","domainData","startYear","endYear","averageValues","fluid","valueStates","energyTypes","map","dataItem","valueState","energy_type","flat","energyTypeValueStacks","i","valuesStart","dataItemEnergy","j","valuesEnd","valuesSet","values","valueStartDeep1","valueStartDeep2","labels","label","datasets","energyType","backgroundColor","stack","Period","setStartYear","setEndYear","style","display","marginRight","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","periodsToPlay","periodPlayingHasStoppedWhileTimeOut","StackedBuildingsEnergyConsumption","useState","valueUnity","setValueUnity","setFluid","setAverageValues","playPeriod","setPlayPeriod","useEffect","setTimeout","filter","period","length","className","alignItems","control","Switch","checked","marginLeft","height","variant","color","onClick","endIcon","marginTop","marginBottom","year","FloatingBuildingsEnergyConsumption","setYear","domainToFloatingChartJsAdapter","Doughnut","domainToDoughnutAdapter","buildingType","buildingTypeItem","itemData","DoughnutBuildingsEnergyConsumption","setBuildingType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.121fc8ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst options = {\r\n    scales: {\r\n        y: {\r\n            suggestedMax: 100,\r\n        },\r\n        x: {\r\n        }\r\n    },\r\n};\r\n\r\nconst GroupedBar = ({data}) => {\r\n    return (\r\n        <>\r\n            <Bar data={data} options={options}/>\r\n        </>\r\n    )};\r\n\r\nexport default GroupedBar;","const randomIntFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport default randomIntFromInterval","import randomIntFromInterval from \"./utils/randomIntFromInterval\";\r\n\r\nconst data = [\r\n    {\r\n        'label': 'Maisons individuelles',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Logements collectifs',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Bureau, enseignement',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Hôtel',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nexport default data;\r\n","const colors = {\r\n    'Chauffage min': 'rgb(239,106,0)',\r\n    'Chauffage moy': 'rgb(239,106,0)',\r\n    'Chauffage': 'rgb(239,106,0)',\r\n    'Chauffage max': 'rgb(157,72,21)',\r\n    'ECS min': 'rgb(172,79,198)',\r\n    'ECS moy': 'rgb(172,79,198)',\r\n    'ECS': 'rgb(172,79,198)',\r\n    'ECS max': 'rgb(101,49,101)',\r\n    'Ventil min': 'rgb(124,204,108)',\r\n    'Ventil moy': 'rgb(124,204,108)',\r\n    'Ventil': 'rgb(124,204,108)',\r\n    'Ventil max': 'rgb(78,128,31)',\r\n    'Clim min': 'rgb(0,114,206)',\r\n    'Clim moy': 'rgb(0,114,206)',\r\n    'Clim': 'rgb(0,114,206)',\r\n    'Clim max': 'rgb(51,5,141)',\r\n    'Éclairage min': 'rgb(242, 205, 0)',\r\n    'Éclairage moy': 'rgb(242, 205, 0)',\r\n    'Éclairage': 'rgb(242, 205, 0)',\r\n    'Éclairage max': 'rgb(241,196,0)',\r\n}\r\n\r\nexport default colors","import colors from \"../colors\";\r\n\r\nconst domainToStackedChartJsAdapter = (domainData, startYear, endYear, averageValues, fluid) => {\r\n    let valueStates = ['min', 'max'];\r\n\r\n    if (averageValues) {\r\n        valueStates = ['moy'];\r\n    }\r\n\r\n    const energyTypes = domainData[0].data.map(dataItem => valueStates.map(valueState => dataItem.energy_type + ' ' + valueState)).flat();\r\n    const energyTypeValueStacks = domainData[0].data.map((dataItem, i) => valueStates.map(valueState => i)).flat();\r\n    let valuesStart = valueStates.map(valueState => domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => dataItem.data[i].data[startYear][valueState])));\r\n    let valuesEnd = valueStates.map(valueState => domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => dataItem.data[i].data[endYear][valueState])));\r\n\r\n    if (!averageValues) {\r\n        valuesStart = valuesStart[0].map((valuesSet, i) => [valuesStart[0][i], valuesStart[1][i]]).flat()\r\n        valuesEnd = valuesEnd[0].map((valuesSet, i) => [valuesEnd[0][i], valuesEnd[1][i]]).flat()\r\n    } else {\r\n        valuesStart = valuesStart[0]\r\n        valuesEnd = valuesEnd[0]\r\n    }\r\n\r\n    const values = valuesStart.map((valueStartDeep1, i) => valueStartDeep1.map((valueStartDeep2, j) => {\r\n        return (valueStartDeep2 + valuesEnd[i][j]) / 2;\r\n    }))\r\n\r\n    return {\r\n        labels: domainData.map(dataItem => dataItem.label),\r\n        datasets:  energyTypes.map((energyType, i) => ({\r\n            label: energyType,\r\n            data:  values[i],\r\n            backgroundColor: colors[energyType],\r\n            stack: energyTypeValueStacks[i]\r\n        }))\r\n    };\r\n}\r\n\r\nexport default domainToStackedChartJsAdapter;","import Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\n\nfunction Period({ startYear, setStartYear, endYear, setEndYear}) {\n    return (\n        <div>\n            <div style={{display: 'inline-block', marginRight: \"2rem\"}}>\n                <InputLabel id=\"start-year-label\">Date début</InputLabel>\n                <Select\n                    labelId={\"start-year-label\"}\n                    id=\"start-year\"\n                    value={startYear}\n                    onChange={(event) => setStartYear(event.target.value)}\n                >\n                    <MenuItem value={'2015'}>2015</MenuItem>\n                    <MenuItem value={'2016'}>2016</MenuItem>\n                </Select>\n            </div>\n            <div style={{display: 'inline-block'}}>\n                <InputLabel id=\"end-year-label\">Date fin</InputLabel>\n                <Select\n                    labelId={\"end-year-label\"}\n                    id=\"year\"\n                    value={endYear}\n                    onChange={(event) => setEndYear(event.target.value)}\n                >\n                    <MenuItem value={'2015'}>2015</MenuItem>\n                    <MenuItem value={'2016'}>2016</MenuItem>\n                </Select>\n            </div>\n        </div>\n    );\n}\n\nexport default Period;","import GroupedBar from \"./../GroupedBar\";\r\nimport data from \"./../../data\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {Button, FormControlLabel} from \"@material-ui/core/index\";\r\nimport domainToStackedChartJsAdapter from \"../../adapter/domainToStackedChartJsAdapter\";\r\nimport Period from \"../utilities/Period\";\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\n\r\nlet periodsToPlay = ['2015', '2016'];\r\nlet periodPlayingHasStoppedWhileTimeOut = false;\r\n\r\nfunction StackedBuildingsEnergyConsumption() {\r\n    const [valueUnity, setValueUnity] = useState('kWhep/m2.an');\r\n    const [startYear, setStartYear] = useState('2015');\r\n    const [endYear, setEndYear] = useState('2015');\r\n    const [fluid, setFluid] = useState('Gaz');\r\n    const [averageValues, setAverageValues] = useState(false);\r\n    const [playPeriod, setPlayPeriod] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (playPeriod !== false) {\r\n            setTimeout(() => {\r\n                periodsToPlay = (periodsToPlay.filter(period => period !== periodsToPlay[0]))\r\n                if (periodsToPlay.length === 0 || periodPlayingHasStoppedWhileTimeOut) {\r\n                    periodPlayingHasStoppedWhileTimeOut = false\r\n                    setPlayPeriod(false);\r\n                    periodsToPlay = ['2015', '2016'];\r\n                    return;\r\n                }\r\n\r\n                setStartYear(periodsToPlay[0]);\r\n                setEndYear(periodsToPlay[0]);\r\n                setPlayPeriod(periodsToPlay[0]);\r\n            }, 1500)\r\n        }\r\n    }, [playPeriod])\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1 className='title'>Consommation énergétique des bâtiments : diagramme 1 (min et max \"stackés\")</h1>\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"fluid-label\">Fluide</InputLabel>\r\n                    <Select\r\n                        labelId={\"fluid-label\"}\r\n                        id=\"fluid\"\r\n                        value={fluid}\r\n                        onChange={(event) => setFluid(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Gaz'}>Gaz</MenuItem>\r\n                        <MenuItem value={'Elec'}>Elec</MenuItem>\r\n                        <MenuItem value={'Fioul'}>Fioul</MenuItem>\r\n                        <MenuItem value={'Bois'}>Bois</MenuItem>\r\n                        <MenuItem value={'Charbon'}>Charbon</MenuItem>\r\n                        <MenuItem value={'Réseau de chaleur'}>Réseau de chaleur</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <Period startYear={startYear} setStartYear={setStartYear} endYear={endYear} setEndYear={setEndYear} setPlayPeriod={setPlayPeriod}/>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"value-unity-label\">Unité</InputLabel>\r\n                    <Select\r\n                        labelId={\"value-unity-label\"}\r\n                        id=\"value-unity\"\r\n                        value={valueUnity}\r\n                        onChange={(event) => setValueUnity(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'kWhep/m2.an'}>kWhep/m2.an</MenuItem>\r\n                        <MenuItem value={'kWhef/m2.an'}>kWhef/m2.an</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={averageValues} onChange={(event) => setAverageValues(event.target.checked)} />}\r\n                        label=\"Valeur moyenne\"\r\n                    />\r\n                </div>\r\n                {playPeriod &&\r\n                <Button\r\n                    style={{marginLeft: '2rem', height: 40}}\r\n                    variant=\"contained\"\r\n                    color=\"primary\" onClick={() => {\r\n                        periodPlayingHasStoppedWhileTimeOut = true;\r\n                        setPlayPeriod(false)\r\n                    }}\r\n                    endIcon={<PauseCircleOutlineIcon />}\r\n                >Stop</Button>\r\n                }\r\n                {!playPeriod &&\r\n                <Button\r\n                    style={{marginLeft: '2rem', height: 40}}\r\n                    variant=\"contained\"\r\n                    color=\"primary\" onClick={() => setPlayPeriod(periodsToPlay[0])}\r\n                    endIcon={<PlayCircleOutlineIcon />}\r\n                >Play</Button>\r\n                }\r\n                {(playPeriod && typeof periodsToPlay[0] !== 'undefined') && <h2 style={{marginLeft: '2rem', marginTop: 0, marginBottom: 0}}>{periodsToPlay[0]}</h2>}\r\n            </div>\r\n            <GroupedBar data={domainToStackedChartJsAdapter(data, startYear, endYear, averageValues, fluid)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StackedBuildingsEnergyConsumption;\r\n","import colors from \"../colors\";\r\n\r\nconst domainToStackedChartJsAdapter = (domainData, year, averageValues, fluid) => {\r\n\r\n    const energyTypes = domainData[0].data.map(dataItem => dataItem.energy_type).flat();\r\n    const energyTypeValueStacks = domainData[0].data.map((dataItem, i) => i).flat();\r\n\r\n    let values = domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => [dataItem.data[i].data[year]['min'], dataItem.data[i].data[year]['max']]));\r\n\r\n    if (averageValues) {\r\n        let valueStates = ['moy'];\r\n        values = valueStates.map(valueState => domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => dataItem.data[i].data[year][valueState])));\r\n        values = values[0]\r\n    }\r\n\r\n    return {\r\n        labels: domainData.map(dataItem => dataItem.label),\r\n        datasets:  energyTypes.map((energyType, i) => ({\r\n            label: energyType,\r\n            data:  values[i],\r\n            backgroundColor: colors[energyType],\r\n            stack: energyTypeValueStacks[i]\r\n        }))\r\n    };\r\n}\r\n\r\nexport default domainToStackedChartJsAdapter;","import GroupedBar from \"./../GroupedBar\";\r\nimport data from \"./../../data\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useState} from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {FormControlLabel} from \"@material-ui/core/index\";\r\nimport domainToFloatingChartJsAdapter from \"../../adapter/domainToFloatingChartJsAdapter\";\r\n\r\nfunction FloatingBuildingsEnergyConsumption() {\r\n    const [valueUnity, setValueUnity] = useState('kWhep/m2.an');\r\n    const [year, setYear] = useState('2015');\r\n    const [fluid, setFluid] = useState('Gaz');\r\n    const [averageValues, setAverageValues] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1 className='title'>Consommation énergétique des bâtiments : diagramme 1.2 (min et max flottants)</h1>\r\n            </div>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"fluid-label\">Fluide</InputLabel>\r\n                    <Select\r\n                        labelId={\"fluid-label\"}\r\n                        id=\"fluid\"\r\n                        value={fluid}\r\n                        onChange={(event) => setFluid(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Gaz'}>Gaz</MenuItem>\r\n                        <MenuItem value={'Elec'}>Elec</MenuItem>\r\n                        <MenuItem value={'Fioul'}>Fioul</MenuItem>\r\n                        <MenuItem value={'Bois'}>Bois</MenuItem>\r\n                        <MenuItem value={'Charbon'}>Charbon</MenuItem>\r\n                        <MenuItem value={'Réseau de chaleur'}>Réseau de chaleur</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"year-label\">Période</InputLabel>\r\n                    <Select\r\n                        labelId={\"year-label\"}\r\n                        id=\"year\"\r\n                        value={year}\r\n                        onChange={(event) => setYear(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'2015'}>2015</MenuItem>\r\n                        <MenuItem value={'2016'}>2016</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"value-unity-label\">Unité</InputLabel>\r\n                    <Select\r\n                        labelId={\"value-unity-label\"}\r\n                        id=\"value-unity\"\r\n                        value={valueUnity}\r\n                        onChange={(event) => setValueUnity(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'kWhep/m2.an'}>kWhep/m2.an</MenuItem>\r\n                        <MenuItem value={'kWhef/m2.an'}>kWhef/m2.an</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={averageValues} onChange={(event) => setAverageValues(event.target.checked)} />}\r\n                        label=\"Valeur moyenne\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <GroupedBar data={domainToFloatingChartJsAdapter(data, year, averageValues, fluid)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FloatingBuildingsEnergyConsumption;\r\n","import React from 'react';\r\nimport { Doughnut as ChartJsDoughnut } from 'react-chartjs-2';\r\n\r\nconst Doughnut = ({ data }) => {\r\n    return (\r\n        <div className={\"doughnut\"}>\r\n            <ChartJsDoughnut data={data}/>\r\n        </div>\r\n    )};\r\n\r\nexport default Doughnut;","import colors from \"../colors\";\r\n\r\nconst domainToDoughnutAdapter = (domainData, year, buildingType) => {\r\n\r\n    const energyTypes = domainData[0].data.map(dataItem => dataItem.energy_type).flat();\r\n    const values = domainData.filter(buildingTypeItem => buildingTypeItem.label === buildingType)[0].data.map(itemData => itemData.data[year]['moy'])\r\n\r\n    return {\r\n        labels: energyTypes.map(energyType => energyType),\r\n        datasets: [\r\n            {\r\n                data:  energyTypes.map((energyType, i) => values[i]),\r\n                backgroundColor:  energyTypes.map((energyType, i) => colors[energyType])\r\n            }\r\n        ]\r\n    };\r\n}\r\n\r\nexport default domainToDoughnutAdapter;","import data from \"./../../data\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useState} from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Doughnut from \"../Dougnut\";\r\nimport domainToDoughnutAdapter from \"../../adapter/domainToDoughnutAdapter\";\r\n\r\nfunction DoughnutBuildingsEnergyConsumption() {\r\n    const [valueUnity, setValueUnity] = useState('kWhep/m2.an');\r\n    const [year, setYear] = useState('2015');\r\n    const [fluid, setFluid] = useState('Gaz');\r\n    const [buildingType, setBuildingType] = useState('Maisons individuelles');\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1 className='title'>Consommation énergétique des bâtiments : diagramme 2 (représentation en doughnut)</h1>\r\n            </div>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"buildingType-label\">Type de logement</InputLabel>\r\n                    <Select\r\n                        labelId={\"buildingType-label\"}\r\n                        id=\"buildingType\"\r\n                        value={buildingType}\r\n                        onChange={(event) => setBuildingType(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Maisons individuelles'}>Maisons individuelles</MenuItem>\r\n                        <MenuItem value={'Logements collectifs'}>Logements collectifs</MenuItem>\r\n                        <MenuItem value={'Bureau, enseignement'}>Bureau, enseignement</MenuItem>\r\n                        <MenuItem value={'Hôtel'}>Hôtel</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"fluid-label\">Fluide</InputLabel>\r\n                    <Select\r\n                        labelId={\"fluid-label\"}\r\n                        id=\"fluid\"\r\n                        value={fluid}\r\n                        onChange={(event) => setFluid(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Gaz'}>Gaz</MenuItem>\r\n                        <MenuItem value={'Elec'}>Elec</MenuItem>\r\n                        <MenuItem value={'Fioul'}>Fioul</MenuItem>\r\n                        <MenuItem value={'Bois'}>Bois</MenuItem>\r\n                        <MenuItem value={'Charbon'}>Charbon</MenuItem>\r\n                        <MenuItem value={'Réseau de chaleur'}>Réseau de chaleur</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"year-label\">Période</InputLabel>\r\n                    <Select\r\n                        labelId={\"year-label\"}\r\n                        id=\"year\"\r\n                        value={year}\r\n                        onChange={(event) => setYear(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'2015'}>2015</MenuItem>\r\n                        <MenuItem value={'2016'}>2016</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"value-unity-label\">Unité</InputLabel>\r\n                    <Select\r\n                        labelId={\"value-unity-label\"}\r\n                        id=\"value-unity\"\r\n                        value={valueUnity}\r\n                        onChange={(event) => setValueUnity(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'kWhep/m2.an'}>kWhep/m2.an</MenuItem>\r\n                        <MenuItem value={'kWhef/m2.an'}>kWhef/m2.an</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            <Doughnut data={domainToDoughnutAdapter(data, year, buildingType)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoughnutBuildingsEnergyConsumption;\r\n","import './App.css';\nimport StackedBuildingsEnergyConsumption from \"./components/diagrams/StackedBuildingsEnergyConsumption\";\nimport FloatingBuildingsEnergyConsumption from \"./components/diagrams/FloatingBuildingsEnergyConsumption\";\nimport DoughnutBuildingsEnergyConsumption from \"./components/diagrams/DoughnutBuildingsEnergyConsumption\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <StackedBuildingsEnergyConsumption/>\n            <div style={{marginBottom: '4rem'}}/>\n            <FloatingBuildingsEnergyConsumption/>\n            <div style={{marginBottom: '4rem'}}/>\n            <DoughnutBuildingsEnergyConsumption/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}