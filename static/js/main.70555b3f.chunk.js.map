{"version":3,"sources":["components/GroupedBar.js","utils/randomIntFromInterval.js","data.js","colors.js","adapter/domainToStackedChartJsAdapter.js","components/diagrams/StackedBuildingsEnergyConsumption.js","adapter/domainToFloatingChartJsAdapter.js","components/diagrams/FloatingBuildingsEnergyConsumption.js","components/Dougnut.js","adapter/domainToDoughnutAdapter.js","components/diagrams/DoughnutBuildingsEnergyConsumption.js","App.js","reportWebVitals.js","index.js"],"names":["options","scales","y","suggestedMax","x","GroupedBar","data","randomIntFromInterval","min","max","Math","floor","random","colors","domainToStackedChartJsAdapter","domainData","year","averageValues","fluid","valueStates","energyTypes","map","dataItem","valueState","energy_type","flat","energyTypeValueStacks","i","values","dataItemEnergy","j","valuesSet","labels","label","datasets","energyType","backgroundColor","stack","StackedBuildingsEnergyConsumption","useState","valueUnity","setValueUnity","setYear","setFluid","setAverageValues","className","style","display","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","marginRight","control","Switch","checked","FloatingBuildingsEnergyConsumption","domainToFloatingChartJsAdapter","Doughnut","domainToDoughnutAdapter","buildingType","filter","buildingTypeItem","itemData","DoughnutBuildingsEnergyConsumption","setBuildingType","App","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70555b3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst options = {\r\n    scales: {\r\n        y: {\r\n            suggestedMax: 100,\r\n        },\r\n        x: {\r\n        }\r\n    },\r\n};\r\n\r\nconst GroupedBar = ({data}) => {\r\n    return (\r\n        <>\r\n            <Bar data={data} options={options}/>\r\n        </>\r\n    )};\r\n\r\nexport default GroupedBar;","const randomIntFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport default randomIntFromInterval","import randomIntFromInterval from \"./utils/randomIntFromInterval\";\r\n\r\nconst data = [\r\n    {\r\n        'label': 'Maisons individuelles',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Logements collectifs',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Bureau, enseignement',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Hôtel',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    },\r\n                    '2016': {\r\n                        'min': randomIntFromInterval(2, 25),\r\n                        'moy': randomIntFromInterval(26, 50),\r\n                        'max': randomIntFromInterval(51, 80)\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nexport default data;\r\n","const colors = {\r\n    'Chauffage min': 'rgb(239,106,0)',\r\n    'Chauffage moy': 'rgb(239,106,0)',\r\n    'Chauffage': 'rgb(239,106,0)',\r\n    'Chauffage max': 'rgb(157,72,21)',\r\n    'ECS min': 'rgb(172,79,198)',\r\n    'ECS moy': 'rgb(172,79,198)',\r\n    'ECS': 'rgb(172,79,198)',\r\n    'ECS max': 'rgb(101,49,101)',\r\n    'Ventil min': 'rgb(124,204,108)',\r\n    'Ventil moy': 'rgb(124,204,108)',\r\n    'Ventil': 'rgb(124,204,108)',\r\n    'Ventil max': 'rgb(78,128,31)',\r\n    'Clim min': 'rgb(0,114,206)',\r\n    'Clim moy': 'rgb(0,114,206)',\r\n    'Clim': 'rgb(0,114,206)',\r\n    'Clim max': 'rgb(51,5,141)',\r\n    'Éclairage min': 'rgb(242, 205, 0)',\r\n    'Éclairage moy': 'rgb(242, 205, 0)',\r\n    'Éclairage': 'rgb(242, 205, 0)',\r\n    'Éclairage max': 'rgb(241,196,0)',\r\n}\r\n\r\nexport default colors","import colors from \"../colors\";\r\n\r\nconst domainToStackedChartJsAdapter = (domainData, year, averageValues, fluid) => {\r\n    let valueStates = ['min', 'max'];\r\n\r\n    if (averageValues) {\r\n        valueStates = ['moy'];\r\n    }\r\n\r\n    const energyTypes = domainData[0].data.map(dataItem => valueStates.map(valueState => dataItem.energy_type + ' ' + valueState)).flat();\r\n    const energyTypeValueStacks = domainData[0].data.map((dataItem, i) => valueStates.map(valueState => i)).flat();\r\n    let values = valueStates.map(valueState => domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => dataItem.data[i].data[year][valueState])));\r\n\r\n    if (!averageValues) {\r\n        values = values[0].map((valuesSet, i) => [values[0][i], values[1][i]]).flat()\r\n    } else {\r\n        values = values[0]\r\n    }\r\n\r\n    return {\r\n        labels: domainData.map(dataItem => dataItem.label),\r\n        datasets:  energyTypes.map((energyType, i) => ({\r\n            label: energyType,\r\n            data:  values[i],\r\n            backgroundColor: colors[energyType],\r\n            stack: energyTypeValueStacks[i]\r\n        }))\r\n    };\r\n}\r\n\r\nexport default domainToStackedChartJsAdapter;","import GroupedBar from \"./../GroupedBar\";\r\nimport data from \"./../../data\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useState} from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {FormControlLabel} from \"@material-ui/core/index\";\r\nimport domainToStackedChartJsAdapter from \"../../adapter/domainToStackedChartJsAdapter\";\r\n\r\nfunction StackedBuildingsEnergyConsumption() {\r\n    const [valueUnity, setValueUnity] = useState('kWhep/m2.an');\r\n    const [year, setYear] = useState('2015');\r\n    const [fluid, setFluid] = useState('Gaz');\r\n    const [averageValues, setAverageValues] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1 className='title'>Consommation énergétique des bâtiments : diagramme 1 (min et max \"stackés\")</h1>\r\n            </div>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"fluid-label\">Fluide</InputLabel>\r\n                    <Select\r\n                        labelId={\"fluid-label\"}\r\n                        id=\"fluid\"\r\n                        value={fluid}\r\n                        onChange={(event) => setFluid(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Gaz'}>Gaz</MenuItem>\r\n                        <MenuItem value={'Elec'}>Elec</MenuItem>\r\n                        <MenuItem value={'Fioul'}>Fioul</MenuItem>\r\n                        <MenuItem value={'Bois'}>Bois</MenuItem>\r\n                        <MenuItem value={'Charbon'}>Charbon</MenuItem>\r\n                        <MenuItem value={'Réseau de chaleur'}>Réseau de chaleur</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"year-label\">Période</InputLabel>\r\n                    <Select\r\n                        labelId={\"year-label\"}\r\n                        id=\"year\"\r\n                        value={year}\r\n                        onChange={(event) => setYear(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'2015'}>2015</MenuItem>\r\n                        <MenuItem value={'2016'}>2016</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"value-unity-label\">Unité</InputLabel>\r\n                    <Select\r\n                        labelId={\"value-unity-label\"}\r\n                        id=\"value-unity\"\r\n                        value={valueUnity}\r\n                        onChange={(event) => setValueUnity(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'kWhep/m2.an'}>kWhep/m2.an</MenuItem>\r\n                        <MenuItem value={'kWhef/m2.an'}>kWhef/m2.an</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={averageValues} onChange={(event) => setAverageValues(event.target.checked)} />}\r\n                        label=\"Valeur moyenne\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <GroupedBar data={domainToStackedChartJsAdapter(data, year, averageValues, fluid)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StackedBuildingsEnergyConsumption;\r\n","import colors from \"../colors\";\r\n\r\nconst domainToStackedChartJsAdapter = (domainData, year, averageValues, fluid) => {\r\n\r\n    const energyTypes = domainData[0].data.map(dataItem => dataItem.energy_type).flat();\r\n    const energyTypeValueStacks = domainData[0].data.map((dataItem, i) => i).flat();\r\n\r\n    let values = domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => [dataItem.data[i].data[year]['min'], dataItem.data[i].data[year]['max']]));\r\n\r\n    if (averageValues) {\r\n        let valueStates = ['moy'];\r\n        values = valueStates.map(valueState => domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => dataItem.data[i].data[year][valueState])));\r\n        values = values[0]\r\n    }\r\n\r\n    return {\r\n        labels: domainData.map(dataItem => dataItem.label),\r\n        datasets:  energyTypes.map((energyType, i) => ({\r\n            label: energyType,\r\n            data:  values[i],\r\n            backgroundColor: colors[energyType],\r\n            stack: energyTypeValueStacks[i]\r\n        }))\r\n    };\r\n}\r\n\r\nexport default domainToStackedChartJsAdapter;","import GroupedBar from \"./../GroupedBar\";\r\nimport data from \"./../../data\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useState} from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {FormControlLabel} from \"@material-ui/core/index\";\r\nimport domainToFloatingChartJsAdapter from \"../../adapter/domainToFloatingChartJsAdapter\";\r\n\r\nfunction FloatingBuildingsEnergyConsumption() {\r\n    const [valueUnity, setValueUnity] = useState('kWhep/m2.an');\r\n    const [year, setYear] = useState('2015');\r\n    const [fluid, setFluid] = useState('Gaz');\r\n    const [averageValues, setAverageValues] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1 className='title'>Consommation énergétique des bâtiments : diagramme 1.2 (min et max flottants)</h1>\r\n            </div>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"fluid-label\">Fluide</InputLabel>\r\n                    <Select\r\n                        labelId={\"fluid-label\"}\r\n                        id=\"fluid\"\r\n                        value={fluid}\r\n                        onChange={(event) => setFluid(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Gaz'}>Gaz</MenuItem>\r\n                        <MenuItem value={'Elec'}>Elec</MenuItem>\r\n                        <MenuItem value={'Fioul'}>Fioul</MenuItem>\r\n                        <MenuItem value={'Bois'}>Bois</MenuItem>\r\n                        <MenuItem value={'Charbon'}>Charbon</MenuItem>\r\n                        <MenuItem value={'Réseau de chaleur'}>Réseau de chaleur</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"year-label\">Période</InputLabel>\r\n                    <Select\r\n                        labelId={\"year-label\"}\r\n                        id=\"year\"\r\n                        value={year}\r\n                        onChange={(event) => setYear(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'2015'}>2015</MenuItem>\r\n                        <MenuItem value={'2016'}>2016</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"value-unity-label\">Unité</InputLabel>\r\n                    <Select\r\n                        labelId={\"value-unity-label\"}\r\n                        id=\"value-unity\"\r\n                        value={valueUnity}\r\n                        onChange={(event) => setValueUnity(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'kWhep/m2.an'}>kWhep/m2.an</MenuItem>\r\n                        <MenuItem value={'kWhef/m2.an'}>kWhef/m2.an</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={averageValues} onChange={(event) => setAverageValues(event.target.checked)} />}\r\n                        label=\"Valeur moyenne\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <GroupedBar data={domainToFloatingChartJsAdapter(data, year, averageValues, fluid)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FloatingBuildingsEnergyConsumption;\r\n","import React from 'react';\r\nimport { Doughnut as ChartJsDoughnut } from 'react-chartjs-2';\r\n\r\nconst Doughnut = ({ data }) => {\r\n    return (\r\n        <div className={\"doughnut\"}>\r\n            <ChartJsDoughnut data={data}/>\r\n        </div>\r\n    )};\r\n\r\nexport default Doughnut;","import colors from \"../colors\";\r\n\r\nconst domainToDoughnutAdapter = (domainData, year, buildingType) => {\r\n\r\n    const energyTypes = domainData[0].data.map(dataItem => dataItem.energy_type).flat();\r\n    const values = domainData.filter(buildingTypeItem => buildingTypeItem.label === buildingType)[0].data.map(itemData => itemData.data[year]['moy'])\r\n\r\n    return {\r\n        labels: energyTypes.map(energyType => energyType),\r\n        datasets: [\r\n            {\r\n                data:  energyTypes.map((energyType, i) => values[i]),\r\n                backgroundColor:  energyTypes.map((energyType, i) => colors[energyType])\r\n            }\r\n        ]\r\n    };\r\n}\r\n\r\nexport default domainToDoughnutAdapter;","import data from \"./../../data\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useState} from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Doughnut from \"../Dougnut\";\r\nimport domainToDoughnutAdapter from \"../../adapter/domainToDoughnutAdapter\";\r\n\r\nfunction DoughnutBuildingsEnergyConsumption() {\r\n    const [valueUnity, setValueUnity] = useState('kWhep/m2.an');\r\n    const [year, setYear] = useState('2015');\r\n    const [fluid, setFluid] = useState('Gaz');\r\n    const [buildingType, setBuildingType] = useState('Maisons individuelles');\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1 className='title'>Consommation énergétique des bâtiments : diagramme 2 (représentation en doughnut)</h1>\r\n            </div>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"buildingType-label\">Type de logement</InputLabel>\r\n                    <Select\r\n                        labelId={\"buildingType-label\"}\r\n                        id=\"buildingType\"\r\n                        value={buildingType}\r\n                        onChange={(event) => setBuildingType(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Maisons individuelles'}>Maisons individuelles</MenuItem>\r\n                        <MenuItem value={'Logements collectifs'}>Logements collectifs</MenuItem>\r\n                        <MenuItem value={'Bureau, enseignement'}>Bureau, enseignement</MenuItem>\r\n                        <MenuItem value={'Hôtel'}>Hôtel</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"fluid-label\">Fluide</InputLabel>\r\n                    <Select\r\n                        labelId={\"fluid-label\"}\r\n                        id=\"fluid\"\r\n                        value={fluid}\r\n                        onChange={(event) => setFluid(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'Gaz'}>Gaz</MenuItem>\r\n                        <MenuItem value={'Elec'}>Elec</MenuItem>\r\n                        <MenuItem value={'Fioul'}>Fioul</MenuItem>\r\n                        <MenuItem value={'Bois'}>Bois</MenuItem>\r\n                        <MenuItem value={'Charbon'}>Charbon</MenuItem>\r\n                        <MenuItem value={'Réseau de chaleur'}>Réseau de chaleur</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"year-label\">Période</InputLabel>\r\n                    <Select\r\n                        labelId={\"year-label\"}\r\n                        id=\"year\"\r\n                        value={year}\r\n                        onChange={(event) => setYear(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'2015'}>2015</MenuItem>\r\n                        <MenuItem value={'2016'}>2016</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div style={{marginRight: '2rem'}}/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <InputLabel id=\"value-unity-label\">Unité</InputLabel>\r\n                    <Select\r\n                        labelId={\"value-unity-label\"}\r\n                        id=\"value-unity\"\r\n                        value={valueUnity}\r\n                        onChange={(event) => setValueUnity(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'kWhep/m2.an'}>kWhep/m2.an</MenuItem>\r\n                        <MenuItem value={'kWhef/m2.an'}>kWhef/m2.an</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            <Doughnut data={domainToDoughnutAdapter(data, year, buildingType)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoughnutBuildingsEnergyConsumption;\r\n","import './App.css';\nimport StackedBuildingsEnergyConsumption from \"./components/diagrams/StackedBuildingsEnergyConsumption\";\nimport FloatingBuildingsEnergyConsumption from \"./components/diagrams/FloatingBuildingsEnergyConsumption\";\nimport DoughnutBuildingsEnergyConsumption from \"./components/diagrams/DoughnutBuildingsEnergyConsumption\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <StackedBuildingsEnergyConsumption/>\n            <div style={{marginBottom: '4rem'}}/>\n            <FloatingBuildingsEnergyConsumption/>\n            <div style={{marginBottom: '4rem'}}/>\n            <DoughnutBuildingsEnergyConsumption/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}