{"version":3,"sources":["components/GroupedBar.js","data.js","adapter/domainToChartJsAdapter.js","App.js","reportWebVitals.js","index.js"],"names":["GroupedBar","data","className","Math","abs","round","random","domainToChartJsAdapter","domainData","Array","length","fill","flat","energyTypes","map","dataItem","valueState","energy_type","energyTypeValueStacks","i","values","dataItemEnergy","j","valuesSet","labels","label","datasets","energyType","backgroundColor","stack","App","useState","valueUnity","setValueUnity","year","setYear","fluid","setFluid","averageValues","setAverageValues","style","display","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","marginRight","control","Switch","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb22f469.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                stacked: true,\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                },\r\n            },\r\n        ],\r\n        xAxes: [\r\n            {\r\n                stacked: true,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst GroupedBar = ({data}) => {\r\n    return (\r\n        <>\r\n            <div className='header'>\r\n                <h1 className='title'>Consommation énergétique des bâtiments : diagramme 1</h1>\r\n            </div>\r\n            <Bar data={data}/>\r\n        </>\r\n    )};\r\n\r\nexport default GroupedBar;","const data = [\r\n    {\r\n        'label': 'Maisons individuelles',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Logements collectifs',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Bureau, enseignement',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'label': 'Hôtel',\r\n        'data': [\r\n            {\r\n                'energy_type': 'Chauffage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'ECS',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Ventil',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Clim',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                'energy_type': 'Éclairage',\r\n                'data' : {\r\n                    '2015': {\r\n                        'min': Math.abs(Math.round(Math.random() * 12 - Math.random() * 5)),\r\n                        'moy': Math.abs(Math.round(Math.random() * 32 - Math.random() * 5)),\r\n                        'max': Math.abs(Math.round(Math.random() * 56 - Math.random() * 5))\r\n                    }\r\n                }\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nexport default data;\r\n","const domainToChartJsAdapter = (domainData) => {\r\n    const energyTypeValueStates = Array(domainData[0].data.length * ['min', 'max'].length).fill(['min', 'max']).flat();\r\n    const energyTypes = domainData[0].data.map(dataItem => ['min', 'max'].map(valueState => dataItem.energy_type + ' ' + valueState)).flat();\r\n    const energyTypeValueStacks = domainData[0].data.map((dataItem, i) => ['min', 'max'].map(valueState => i)).flat();\r\n\r\n    const totalValues = (Array(domainData.length * domainData[0].data.length * ['min', 'max'].length));\r\n    let values = ['min', 'max'].map(valueState => domainData[0].data.map((dataItemEnergy, i) => domainData.map((dataItem, j) => dataItem.data[i].data['2015'][valueState])));\r\n    values = values[0].map((valuesSet, i) => [values[0][i], values[1][i]]).flat()\r\n\r\n\r\n    return {\r\n        labels: domainData.map(dataItem => dataItem.label),\r\n        datasets:  energyTypes.map((energyType, i) => ({\r\n            label: energyType,\r\n            data:  values[i],\r\n            backgroundColor: 'rgb(' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) +')',\r\n            stack: energyTypeValueStacks[i]\r\n        }))\r\n    };\r\n}\r\n\r\nexport default domainToChartJsAdapter;","import './App.css';\nimport GroupedBar from \"./components/GroupedBar\";\nimport data from \"./data\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {useState} from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Switch from '@material-ui/core/Switch';\nimport {FormControlLabel} from \"@material-ui/core/index\";\nimport domainToChartJsAdapter from \"./adapter/domainToChartJsAdapter\";\n\nfunction App() {\n    const [valueUnity, setValueUnity] = useState('kWhep/m2.an');\n    const [year, setYear] = useState('2015');\n    const [fluid, setFluid] = useState('Gaz');\n    const [averageValues, setAverageValues] = useState(false);\n\n    return (\n        <div className=\"App\">\n            <div style={{ display: 'flex' }}>\n                <div style={{display: 'inline-block'}}>\n                    <InputLabel id=\"value-unity-label\">Unité</InputLabel>\n                    <Select\n                        labelId={\"value-unity-label\"}\n                        id=\"value-unity\"\n                        value={valueUnity}\n                        onChange={(event) => setValueUnity(event.target.value)}\n                    >\n                        <MenuItem value={'kWhep/m2.an'}>kWhep/m2.an</MenuItem>\n                        <MenuItem value={'kWhef/m2.an'}>kWhef/m2.an</MenuItem>\n                    </Select>\n                </div>\n\n                <div style={{marginRight: '2rem'}}/>\n                <div style={{display: 'inline-block'}}>\n                    <InputLabel id=\"year-label\">Période</InputLabel>\n                    <Select\n                        labelId={\"year-label\"}\n                        id=\"year\"\n                        value={year}\n                        onChange={(event) => setYear(event.target.value)}\n                    >\n                        <MenuItem value={'2015'}>2015</MenuItem>\n                        <MenuItem value={'2016'}>2016</MenuItem>\n                    </Select>\n                </div>\n                <div style={{marginRight: '2rem'}}/>\n                <div style={{display: 'inline-block'}}>\n                    <InputLabel id=\"fluid-label\">Fluide</InputLabel>\n                    <Select\n                        labelId={\"fluid-label\"}\n                        id=\"fluid\"\n                        value={fluid}\n                        onChange={(event) => setFluid(event.target.value)}\n                    >\n                        <MenuItem value={'Gaz'}>Gaz</MenuItem>\n                        <MenuItem value={'Elec'}>Elec</MenuItem>\n                        <MenuItem value={'Fioul'}>Fioul</MenuItem>\n                        <MenuItem value={'Bois'}>Bois</MenuItem>\n                        <MenuItem value={'Charbon'}>Charbon</MenuItem>\n                        <MenuItem value={'Réseau de chaleur'}>Réseau de chaleur</MenuItem>\n                    </Select>\n                </div>\n                <div style={{marginRight: '2rem'}}/>\n                <div style={{display: 'inline-block'}}>\n                    <FormControlLabel\n                        control={<Switch checked={averageValues} onChange={(event) => setAverageValues(event.target.checked)} />}\n                        label=\"Valeur moyenne\"\n                    />\n                </div>\n            </div>\n            <GroupedBar data={domainToChartJsAdapter(data)}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}